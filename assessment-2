class Student
{
    // Non-static data members
    public string Name;
    public int RollNo;
    public float[] Marks = new float[5];
    public float TotalMarks;
    public float Percentage;

    // Static data member
    public static string UniversityName;

    // Default constructor
    public Student()
    {
        Name = string.Empty;
        RollNo = 0;
        TotalMarks = 0;
        Percentage = 0;
        for (int i = 0; i < 5; i++)
        {
            Marks[i] = 0;
        }
    }

    // Parameterized constructor
    public Student(string name, int rollNo, float[] marks)
    {
        Name = name;
        RollNo = rollNo;
        TotalMarks = 0;
        Percentage = 0;
        Marks = marks;
    }

    // Static constructor to initialize the static field UniversityName
    static Student()
    {
        UniversityName = "Unknown University";
    }

    // Method to read data
    public void ReadData()
    {
        Console.Write("Enter Name: ");
        Name = Console.ReadLine();

        Console.Write("Enter Roll No: ");
        RollNo = int.Parse(Console.ReadLine());

        Console.WriteLine("Enter marks for 5 subjects:");
        for (int i = 0; i < 5; i++)
        {
            Console.Write($"Subject {i + 1}: ");
            Marks[i] = float.Parse(Console.ReadLine());
        }
    }

    // Method to calculate total marks and percentage
    public void CalculateResult()
    {
        TotalMarks = 0;
        for (int i = 0; i < 5; i++)
        {
            TotalMarks += Marks[i];
        }
        Percentage = TotalMarks / 5;
    }

    // Method to display student details
    public void Display()
    {
        Console.WriteLine($"University: {UniversityName}");
        Console.WriteLine($"Name: {Name}");
        Console.WriteLine($"Roll No: {RollNo}");
        Console.Write("Marks: ");
        foreach (var mark in Marks)
        {
            Console.Write(mark + " ");
        }
        Console.WriteLine();
        Console.WriteLine($"Total Marks: {TotalMarks}");
        Console.WriteLine($"Percentage: {Percentage}%");
    }

    // Static method to set the university name
    public static void SetUniversityName(string universityName)
    {
        UniversityName = universityName;
    }

    // Static method to get the university name
    public static string GetUniversityName()
    {
        return UniversityName;
    }
}

class Class1
{
    static void Main()
    {
        // Set the university name
        Student.SetUniversityName("XYZ University");

        // Create a student object using default constructor
        Student student1 = new Student();
        student1.ReadData();
        student1.CalculateResult();
        student1.Display();

        // Create a student object using parameterized constructor
        float[] marks = { 85, 90, 78, 92, 88 };
        Student student2 = new Student("Alice", 10234, marks);
        student2.CalculateResult();
        student2.Display();
    }
}




using System;

interface Account
{
    void Open_Account();
    void Close_Account();
}

interface Customer
{
    void Display_Customer_Detail();
}

class SavingAccount : Account, Customer
{
    // Non-static data members
    public string CustomerName;
    public int AccountNumber;
    public double Balance;

    // Static data member
    public static string BankName;

    // Default Constructor
    public SavingAccount()
    {
        CustomerName = string.Empty;
        AccountNumber = 0;
        Balance = 0;
    }

    // Parameterized Constructor
    public SavingAccount(string customerName, int accountNumber, double initialDeposit)
    {
        CustomerName = customerName;
        AccountNumber = accountNumber;
        Balance = initialDeposit;
    }

    // Static Constructor
    static SavingAccount()
    {
        BankName = "XYZ Bank";  // Set default bank name for all accounts
    }

    // Method to open an account
    public void Open_Account()
    {
        Console.WriteLine("Account opened for {0} with Account Number: {1}", CustomerName, AccountNumber);
    }

    // Method to close an account
    public void Close_Account()
    {
        Console.WriteLine("Account with Account Number {0} is now closed.", AccountNumber);
        // Reset account details after closure
        CustomerName = string.Empty;
        AccountNumber = 0;
        Balance = 0;
    }

    // Method to display customer details
    public void Display_Customer_Detail()
    {
        Console.WriteLine("Customer Name: {0}", CustomerName);
        Console.WriteLine("Account Number: {0}", AccountNumber);
    }

    // Method to withdraw money from the account
    public void Withdraw(double amount)
    {
        if (Balance >= amount)
        {
            Balance -= amount;
            Console.WriteLine("Withdrawal successful! You withdrew: ${0}", amount);
        }
        else
        {
            Console.WriteLine("Insufficient balance. Cannot withdraw ${0}.", amount);
        }
    }

    // Method to deposit money into the account
    public void Deposit(double amount)
    {
        Balance += amount;
        Console.WriteLine("Deposit successful! You deposited: ${0}", amount);
    }

    // Method to check and display balance
    public void Check_And_Display_Balance()
    {
        Console.WriteLine("Current balance: ${0}", Balance);
    }
}

class Program
{
    static void Main()
    {
        // Create a SavingAccount object using the parameterized constructor
        SavingAccount account1 = new SavingAccount("John Doe", 123456, 1000.0);

        // Display customer details and open an account
        account1.Display_Customer_Detail();
        account1.Open_Account();

        // Check and display balance
        account1.Check_And_Display_Balance();

        // Deposit and withdraw
        account1.Deposit(500.0);
        account1.Check_And_Display_Balance();
        account1.Withdraw(300.0);
        account1.Check_And_Display_Balance();

        // Close the account
        account1.Close_Account();

        // Static property access
        Console.WriteLine("Bank Name: " + SavingAccount.BankName);
    }
}




